plugins {
    id "com.android.application"
    id "kotlin-android"
    // The Flutter Gradle Plugin must be applied after the Android and Kotlin Gradle plugins.
    id "dev.flutter.flutter-gradle-plugin"
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file("key.properties")
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    namespace = "immersion_camp.week3.app.health_diary.health_diary_fe"
    compileSdk = flutter.compileSdkVersion
    ndkVersion = flutter.ndkVersion

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_1_8
        targetCompatibility = JavaVersion.VERSION_1_8
        coreLibraryDesugaringEnabled true // Core Library Desugaring 활성화
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId = "immersion_camp.week3.app.health_diary.health_diary_fe"
        minSdk = 21
        targetSdk = flutter.targetSdkVersion
        versionCode = flutter.versionCode
        versionName = flutter.versionName

        // manifestPlaceholders 설정
        manifestPlaceholders = [
                KAKAO_NATIVE_APP_KEY: keystoreProperties['kakao_native_app_key'],
                applicationName     : "io.flutter.app.FlutterApplication"
        ]
    }

    buildTypes {
        release {
            signingConfig = signingConfigs.debug
        }
    }

    // QR 코드 스캐너 및 관련 라이브러리 지원
    packagingOptions {
        resources {
            excludes += [
                    "META-INF/DEPENDENCIES",
                    "META-INF/INDEX.LIST",
                    "META-INF/NOTICE",
                    "META-INF/LICENSE",
            ]
        }
    }
}

flutter {
    source = "../.."
}

dependencies {
    implementation 'com.google.zxing:core:3.4.1' // QR 코드 관련 라이브러리
    coreLibraryDesugaring 'com.android.tools:desugar_jdk_libs:2.0.3' // Core Library Desugaring
}
